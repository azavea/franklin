Parameters:
    App:
        Type: String
        Description: Your application's name.
    Env:
        Type: String
        Description: The environment name your service, job, or workflow is being deployed to.
    Name:
        Type: String
        Description: The name of the service, job, or workflow being deployed.
    # Customize your Aurora Serverless cluster by setting the default value of the following parameters.
    franklinapiclusterDBName:
        Type: String
        Description: The name of the initial database to be created in the DB cluster.
        Default: franklin
        # Cannot have special characters
        # Naming constraints: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints
    franklinapiclusterDBAutoPauseSeconds:
        Type: Number
        Description: The duration in seconds before the cluster pauses.
        Default: 1000
Mappings:
    franklinapiclusterEnvScalingConfigurationMap:
        All:
            "DBMinCapacity": 2 # AllowedValues: [2, 4, 8, 16, 32, 64, 192, 384]
            "DBMaxCapacity": 8 # AllowedValues: [2, 4, 8, 16, 32, 64, 192, 384]
Resources:
    franklinapiclusterDBSubnetGroup:
        Type: 'AWS::RDS::DBSubnetGroup'
        Properties:
            DBSubnetGroupDescription: Group of Copilot private subnets for Aurora cluster.
            SubnetIds: !Split [',', {'Fn::ImportValue': !Sub '${App}-${Env}-PrivateSubnets'}]
    franklinapiclusterSecurityGroup:
        Metadata:
            'aws:copilot:description': 'A security group for your workload to access the DB cluster franklinapicluster'
        Type: 'AWS::EC2::SecurityGroup'
        Properties:
            GroupDescription: !Sub 'The Security Group for ${Name} to access DB cluster franklinapicluster.'
            VpcId:
                Fn::ImportValue: !Sub '${App}-${Env}-VpcId'
            Tags:
                - Key: Name
                  Value: !Sub 'copilot-${App}-${Env}-${Name}-Aurora'
    franklinapiclusterDBClusterSecurityGroup:
        Metadata:
            'aws:copilot:description': 'A security group for your DB cluster franklinapicluster'
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: The Security Group for the database cluster.
            SecurityGroupIngress:
                - ToPort: 5432
                  FromPort: 5432
                  IpProtocol: tcp
                  Description: !Sub 'From the Aurora Security Group of the workload ${Name}.'
                  SourceSecurityGroupId: !Ref franklinapiclusterSecurityGroup
            VpcId:
                Fn::ImportValue: !Sub '${App}-${Env}-VpcId'
    franklinapiclusterAuroraSecret:
        Metadata:
            'aws:copilot:description': 'A Secrets Manager secret to store your DB credentials'
        Type: AWS::SecretsManager::Secret
        Properties:
            Description: !Sub Aurora main user secret for ${AWS::StackName}
            GenerateSecretString:
                SecretStringTemplate: '{"username": "postgres"}'
                GenerateStringKey: "password"
                ExcludePunctuation: true
                IncludeSpace: false
                PasswordLength: 16
    franklinapiclusterDBClusterParameterGroup:
        Metadata:
            'aws:copilot:description': 'A DB parameter group for engine configuration values'
        Type: 'AWS::RDS::DBClusterParameterGroup'
        Properties:
            Description: !Ref 'AWS::StackName'
            Family: 'aurora-postgresql10'
            Parameters:
                client_encoding: 'UTF8'
    franklinapiclusterDBCluster:
        Metadata:
            'aws:copilot:description': 'The franklinapicluster Aurora Serverless database cluster'
        Type: 'AWS::RDS::DBCluster'
        Properties:
            MasterUsername: !Join ["", ['{{resolve:secretsmanager:', !Ref franklinapiclusterAuroraSecret, ":SecretString:username}}"]]
            MasterUserPassword: !Join ["", ['{{resolve:secretsmanager:', !Ref franklinapiclusterAuroraSecret, ":SecretString:password}}"]]
            DatabaseName: !Ref franklinapiclusterDBName
            Engine: 'aurora-postgresql'
            EngineVersion: '10.12'
            EngineMode: serverless
            DBClusterParameterGroupName: !Ref franklinapiclusterDBClusterParameterGroup
            DBSubnetGroupName: !Ref franklinapiclusterDBSubnetGroup
            VpcSecurityGroupIds:
                - !Ref franklinapiclusterDBClusterSecurityGroup
            ScalingConfiguration:
                AutoPause: true
                # Replace "All" below with "!Ref Env" to set different autoscaling limits per environment.
                MinCapacity: !FindInMap [franklinapiclusterEnvScalingConfigurationMap, All, DBMinCapacity]
                MaxCapacity: !FindInMap [franklinapiclusterEnvScalingConfigurationMap, All, DBMaxCapacity]
                SecondsUntilAutoPause: !Ref franklinapiclusterDBAutoPauseSeconds
    franklinapiclusterSecretAuroraClusterAttachment:
        Type: AWS::SecretsManager::SecretTargetAttachment
        Properties:
            SecretId: !Ref franklinapiclusterAuroraSecret
            TargetId: !Ref franklinapiclusterDBCluster
            TargetType: AWS::RDS::DBCluster
Outputs:
    franklinapiclusterSecret: # injected as FRANKLINAPICLUSTER_SECRET environment variable by Copilot.
        Description: "The JSON secret that holds the database username and password. Fields are 'host', 'port', 'dbname', 'username', 'password', 'dbClusterIdentifier' and 'engine'"
        Value: !Ref franklinapiclusterAuroraSecret
    franklinapiclusterSecurityGroup:
        Description: "The security group to attach to the workload."
        Value: !Ref franklinapiclusterSecurityGroup
    dbName:
        Description: "The DB_NAME exported as env var for the API container"
        Value: !Join ["", ['{{resolve:secretsmanager:', !Ref franklinapiclusterAuroraSecret, ":SecretString:dbname}}"]]
    dbHost:
        Description: "The DB_HOST exported as env var for the API container"
        Value: !Join ["", ['{{resolve:secretsmanager:', !Ref franklinapiclusterAuroraSecret, ":SecretString:host}}"]]
    dbUser:
        Description: "The DB_USER exported as env var for the API container"
        Value: !Join ["", ['{{resolve:secretsmanager:', !Ref franklinapiclusterAuroraSecret, ":SecretString:username}}"]]
    dbPassword:
        Description: "The DB_PASSWORD exported as env var for the API container"
        Value: !Join ["", ['{{resolve:secretsmanager:', !Ref franklinapiclusterAuroraSecret, ":SecretString:password}}"]]
